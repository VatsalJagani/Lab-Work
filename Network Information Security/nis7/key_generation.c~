#include <stdio.h>
#include <stdlib.h>

int big[64];
int small[56];
int verySmall[28];
int medium[48];

static const int perbox[56] = {
 
   57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4
};

static const int combox[48] = {
 14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32
};

/*Function to left rotate arr[] of size n by d*/

void leftRotatebyOne(int arr[])
{
  int i, temp;
  temp = arr[0];
  for (i = 0; i < 27; i++)
     arr[i] = arr[i+1];
  arr[i] = temp;
}
void leftRotate(int arr[], int d)
{
  int i;
  for (i = 0; i < d; i++)
    leftRotatebyOne(arr);
}

void permutation(int arr[]){   /* permutation and parity dropout */
	int i=0;
	for(i=0;i<56;i++)
	{
		small[i]=arr[perbox[i]-1];	
	}
}


void compbox(int arr[]){   /* returns 48 bit round function */
	int i=0;
	for(i=0;i<48;i++)
	{
		medium[i]=arr[perbox[i]-1];	
	}
}
 

void keys(int key[], int *keys){	/* 64 bit key to 16 * 48-bit keys */
	permutaion(key);
	int n=0;
	int i,j,k;
	for(i=0;i<16;i++) /* generate round key */
	{
		int left[28];
		int right[28];
		for(j=0;j<28;j++){
			left[i]=small[j];
		}
		for(k=0;j<56;k++,j++){
			right[k]=small[j];
		}
		
		if(i==0 || i==1 || i==8 || i==15){	/* round no 1,2,9 and 16  required only one shift left  */
			leftRotate(left,1);
			for(j=0;j<28;j++){
				small[i]=verySmall[j];
			}
			leftRotate(right,1);
			for(k=0;j<56;k++,j++){
				small[j]=verySmall[k];
			}
		}
		else{
			leftRotate(left,2);
			for(j=0;j<28;j++){
				small[i]=verySmall[j];
			}
			leftRotate(right,2);
			for(k=0;j<56;k++,j++){
				small[j]=verySmall[k];
			}
		}
		compbox(small);
		for(j=0;j<48;j++){
			*(keys+i*48+j)=medium[j];
		}
	}
	
}



main(){
	int *round_keys,i,j;
	round_keys=malloc(16*48*sizeof(int));
	int key[64]={1,1,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0, 0,0,1,0, 0,1,0,0, 0,1,1,0};
	keys(key,round_keys);
	for(i=0;i<16;i++){
		for(j=0;j<48;j++){
			printf("%d ",*(round_keys+i*48+j));
		}
		printf("\n");
	}
}


